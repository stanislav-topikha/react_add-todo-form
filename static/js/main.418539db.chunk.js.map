{"version":3,"sources":["api/todos.ts","api/users.ts","components/TodoInfo/TodoInfo.tsx","components/UserInfo/UserInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["todos","userId","id","title","completed","users","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","TodoInfo","todo","onStatusClick","className","type","onClick","UserInfo","user","toLowerCase","TodoList","map","App","rawTodos","usersFromServer","useState","todosFromServer","setTodos","defaultNewTodo","newTodo","setNewTodo","isUserValid","setIsUserValid","isTextValid","setIsTextValid","handleChange","key","value","prevTodo","onChange","event","target","placeholder","disabled","isDataValid","isNewTodoDataValid","prevTodos","length","find","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.418539db.chunk.js","sourcesContent":["/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","// Don't forget to import the React library\n\n// Create a `TodoInfo` component accepting a `todo` object and use it in the\n// list to render `title`, `completed` status and `User`\n\n// Add a default export statement for TodoInfo component to use it in the other files\nimport React from 'react';\nimport './TodoInfo.scss';\nimport { PreparedTodo } from '../../types/PreparedTodo';\n\ntype Props = {\n  todo: PreparedTodo;\n  onStatusClick: (id: number) => void;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, onStatusClick }) => {\n  const { id, title, completed } = todo;\n\n  return (\n    <div className=\"todo-info\">\n      <span data-cy=\"title\">{title}</span>\n\n      <button\n        type=\"button\"\n        title={completed ? 'Done' : 'In process'}\n        data-cy=\"status\"\n        onClick={() => onStatusClick(id)}\n        className=\"todo-info__button\"\n      >\n        {completed ? '✅' : '🟡'}\n      </button>\n    </div>\n  );\n};\n","// Create a `UserInfo` component accepting a `user` object and use it to render\n// a `todo.user` in the list with some styling. (Show at least a `name` and an\n// `email` of the `user`)\n\n// Add a default export statement for UserInfo component to use it in the other files\nimport React from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <div className=\"user-info\">\n      <span data-cy=\"username\">{user.name}</span>\n      ┊\n      <span>{user.username}</span>\n      <span className=\"user-info__email\" data-cy=\"email\">{`${user.email.toLowerCase()}`}</span>\n    </div>\n  );\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport { PreparedTodo } from '../../types/PreparedTodo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todos: PreparedTodo[]\n  onStatusClick: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onStatusClick }) => {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <li className=\"todo-list__item\" key={todo.id}>\n          {todo.user && (\n            <UserInfo user={todo.user} />\n          )}\n          <hr className=\"todo-list__divider\" />\n          <TodoInfo\n            todo={todo}\n            onStatusClick={onStatusClick}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { PreparedTodo } from './types/PreparedTodo';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const users: User[] = usersFromServer;\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer);\n  const defaultNewTodo = {\n    userId: 0,\n    title: '',\n    completed: false,\n  };\n\n  const [newTodo, setNewTodo] = useState({ ...defaultNewTodo });\n\n  const [isUserValid, setIsUserValid] = useState(true);\n  const [isTextValid, setIsTextValid] = useState(true);\n\n  const isNewTodoDataValid = () => {\n    let isDataValid = true;\n\n    if (newTodo.userId === 0) {\n      setIsUserValid(false);\n\n      isDataValid = false;\n    }\n\n    if (newTodo.title === '') {\n      setIsTextValid(false);\n\n      isDataValid = false;\n    }\n\n    return isDataValid;\n  };\n\n  const handleChange = (key: string, value: string | number) => {\n    setNewTodo(prevTodo => ({\n      ...prevTodo,\n      [key]: value,\n    }));\n  };\n\n  const handleAddClick = () => {\n    if (!isNewTodoDataValid()) {\n      return;\n    }\n\n    setTodos(prevTodos => [\n      ...prevTodos,\n      {\n        id: prevTodos[prevTodos.length - 1].id + 1,\n        ...newTodo,\n      },\n    ]);\n\n    setNewTodo({ ...defaultNewTodo });\n    setIsUserValid(true);\n    setIsTextValid(true);\n  };\n\n  const prepareTodos = (rawTodos: Todo[]): PreparedTodo[] => (\n    rawTodos.map(todo => ({\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId) || null,\n    }))\n  );\n\n  const handeStatusChange = (id: number) => (\n    setTodos(prev => (\n      prev.map(todo => {\n        if (todo.id === id) {\n          return { ...todo, completed: !todo.completed };\n        }\n\n        return todo;\n      })\n    ))\n  );\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app__title\">Add todo form</h1>\n\n      <form className=\"app__form\">\n        <label className=\"app__input-group\">\n          {!isTextValid && (\n            <span className=\"app__input-error\">\n              Please enter the title ⚠️\n            </span>\n          )}\n\n          <span className=\"app__label-text\">\n            Todo text:\n          </span>\n\n          <input\n            name=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            className=\"input\"\n            value={newTodo.title}\n            onChange={event => {\n              handleChange(event.target.name, event.target.value);\n              setIsTextValid(true);\n            }}\n            placeholder=\"Input Todo text here\"\n          />\n        </label>\n\n        <label className=\"app__input-group\">\n          {!isUserValid && (\n            <span className=\"app__input-error\">\n              Please choose a user ⚠️\n            </span>\n          )}\n\n          <span className=\"app__label-text\">\n            Choose User:\n          </span>\n\n          <div className=\"select\">\n            <select\n              name=\"userId\"\n              data-cy=\"userSelect\"\n              value={newTodo.userId}\n              onChange={event => {\n                handleChange(event.target.name, +event.target.value);\n                setIsUserValid(true);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {users.map(({ id, name, username }) => (\n                <option key={id} value={id}>\n                  {`${name} [${username}]`}\n                </option>\n              ))}\n            </select>\n          </div>\n        </label>\n\n        <button\n          type=\"button\"\n          className=\"button is-primary\"\n          onClick={handleAddClick}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={prepareTodos(todos)}\n        onStatusClick={handeStatusChange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}